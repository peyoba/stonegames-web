// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("MONGODB_URI")
}

// 游戏模型
model Game {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  title       String    // 游戏标题
  titleEn     String    // 英文标题
  description String    // 中文描述
  descriptionEn String  // 英文描述
  imageUrl    String    // 游戏图片URL
  gameUrl     String    // 游戏URL
  published   Boolean   @default(false) // 是否发布
  category    Category? @relation(fields: [categoryId], references: [id])
  categoryId  String?   @db.ObjectId
  tags        String[]  // 游戏标签
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@index([categoryId])
  @@index([published])
}

// 游戏分类模型
model Category {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String   // 中文名称
  nameEn      String   // 英文名称
  description String?  // 中文描述
  descriptionEn String? // 英文描述
  icon        String?  // 分类图标URL
  games       Game[]   // 关联的游戏
  published   Boolean  @default(true) // 是否发布
  order       Int      @default(0) // 排序顺序
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([published])
  @@index([order])
}

// 管理员模型
model Admin {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  email     String   @unique // 管理员邮箱
  password  String   // 加密后的密码
  name      String   // 管理员名称
  role      Role     @default(ADMIN) // 角色
  lastLogin DateTime? // 最后登录时间
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("admins")
}

// 用户模型
model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  email     String   @unique
  name      String
  password  String
  role      Role     @default(USER)
  avatar    String?  // 用户头像URL
  lastLogin DateTime? // 最后登录时间
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// 用户角色枚举
enum Role {
  USER
  ADMIN
}

// 系统配置模型
model SystemConfig {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  key         String   @unique // 配置键
  value       String   // 配置值
  description String?  // 配置描述
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
} 